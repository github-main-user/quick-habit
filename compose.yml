services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5
        
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

  web:
    build: .
    command: bash -c "python manage.py migrate &&
                      python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: on-failure

  celery_worker:
    build: .
    command: celery -A config worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: on-failure
    
  celery_beat:
    build: .
    command: celery -A config beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: on-failure

volumes:
  pgdata:
